
Функция ordersGet(Запрос)
	Ответ = Новый HTTPСервисОтвет(200); 
	ДатаЗапроса = СтроковыеФункцииКлиентСервер.СтрокаВДату(СтрЗаменить(Запрос.ПараметрыURL["data"],"-","."));
	ЛатаСтрокой=Запрос.ПараметрыURL["data"];
	Если ДатаЗапроса = Неопределено Тогда
		Ответ = Новый HTTPСервисОтвет(400);
		Ответ.УстановитьТелоИзСтроки("Не задан параметр Дата");
		Ответ.Заголовки.Вставить("Content-type", "application/json");
		Возврат Ответ;	
	КонецЕсли;
	
	Ответ.Заголовки.Вставить("Content-type", "application/json");
		
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ЗаказКлиента.Ссылка КАК Ссылка,
	             |	ЗаказКлиента.СпособДоставки КАК СпособДоставки,
	             |	ЗаказКлиента.СпособОплаты КАК СпособОплаты
	             |ПОМЕСТИТЬ ВТ
	             |ИЗ
	             |	Документ.ЗаказКлиента КАК ЗаказКлиента
	             |ГДЕ
	             |	ЗаказКлиента.Дата МЕЖДУ &НачалоДня И &КонецДня
	             |	И ЗаказКлиента.Проведен
	             |
	             |ИНДЕКСИРОВАТЬ ПО
	             |	Ссылка
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ЗаказКлиентаТовары.Ссылка КАК Ссылка,
	             |	ЗаказКлиентаТовары.ПричинаОтмены КАК ПричинаОтмены,
	             |	ЗаказКлиентаТовары.Номенклатура КАК Номенклатура
	             |ПОМЕСТИТЬ ВТ_2
	             |ИЗ
	             |	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	             |ГДЕ
	             |	ЗаказКлиентаТовары.Ссылка.Дата МЕЖДУ &НачалоДня И &КонецДня
	             |	И ЗаказКлиентаТовары.Ссылка.Проведен
	             |	И ЗаказКлиентаТовары.Ссылка В
	             |			(ВЫБРАТЬ
	             |				ВТ.Ссылка КАК Ссылка
	             |			ИЗ
	             |				ВТ КАК ВТ)
	             |
	             |ИНДЕКСИРОВАТЬ ПО
	             |	Ссылка
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ЗаказыКлиентовОстатки.ЗаказКлиента.Номер КАК ЗаказКлиента,
	             |	ЗаказыКлиентовОстатки.Номенклатура КАК Номенклатура,
	             |	ЗаказыКлиентовОстатки.Характеристика КАК Характеристика,
	             |	ЗаказыКлиентовОстатки.Склад КАК Склад,
	             |	ЗаказыКлиентовОстатки.ЗаказаноОстаток КАК Заказано,
	             |	ЗаказыКлиентовОстатки.КОформлениюОстаток КАК КОформлению,
	             |	ЗаказыКлиентовОстатки.СуммаОстаток КАК Сумма,
	             |	ВТ.СпособДоставки КАК СпособДоставки,
	             |	ВТ.СпособОплаты КАК СпособОплаты,
	             |	РеализацияТоваровУслугТовары.Ссылка.Дата КАК ДатаОтгрузки,
	             |	ЗаказыКлиентовОстатки.ЗаказКлиента.Дата КАК ЗаказКлиентаДата,
	             |	ВТ_2.ПричинаОтмены КАК ПричинаОтмены
	             |ИЗ
	             |	РегистрНакопления.ЗаказыКлиентов.Остатки(
	             |			&НаДату,
	             |			ЗаказКлиента В
	             |				(ВЫБРАТЬ
	             |					ВТ.Ссылка КАК Ссылка
	             |				ИЗ
	             |					ВТ КАК ВТ)) КАК ЗаказыКлиентовОстатки
	             |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ КАК ВТ
	             |		ПО ЗаказыКлиентовОстатки.ЗаказКлиента = ВТ.Ссылка
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	             |		ПО ЗаказыКлиентовОстатки.ЗаказКлиента = РеализацияТоваровУслугТовары.Ссылка.ЗаказКлиента
	             |			И ЗаказыКлиентовОстатки.Номенклатура = РеализацияТоваровУслугТовары.Номенклатура
	             |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_2 КАК ВТ_2
	             |		ПО ЗаказыКлиентовОстатки.ЗаказКлиента = ВТ_2.Ссылка
	             |			И ЗаказыКлиентовОстатки.Номенклатура = ВТ_2.Номенклатура
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	ЗаказКлиента";
	Запрос.УстановитьПараметр("НачалоДня",НачалоДня(ДатаЗапроса));
	Запрос.УстановитьПараметр("КонецДня",КонецДня(ДатаЗапроса));
    Запрос.УстановитьПараметр("НаДату",КонецДня(ДатаЗапроса));

	Выборка=Запрос.Выполнить().Выбрать();
	
	
	МассивДанных = Новый Массив;
	
	
	Пока Выборка.Следующий() Цикл	
		СтруктураДанных = Новый Структура;
		СтруктураДанных.Вставить("sales_order_date", Строка(Формат(Выборка.ЗаказКлиентаДата,"ДФ=yyyy-MM-dd")));
		СтруктураДанных.Вставить("sales_order_time", Строка(Формат(Выборка.ЗаказКлиентаДата,"ДЛФ=T")));
		СтруктураДанных.Вставить("sales_order", Строка(Выборка.ЗаказКлиента));
		СтруктураДанных.Вставить("sales_item", Строка(Выборка.Номенклатура));  
		СтруктураДанных.Вставить("additional_description", Строка(Выборка.Характеристика));
		СтруктураДанных.Вставить("delivery_method", Строка(Выборка.СпособДоставки));
		СтруктураДанных.Вставить("payment_method", Строка(Выборка.СпособОплаты));
		СтруктураДанных.Вставить("warehouse",Строка(Выборка.Склад));
		СтруктураДанных.Вставить("sales_date",Строка(Формат(Выборка.ДатаОтгрузки,"ДФ=yyyy-MM-dd")));
		Если ЗначениеЗаполнено(Выборка.Номенклатура) Тогда
          Запрос2 = Новый Запрос;
			Запрос2.Текст = "ВЫБРАТЬ
                |	Номенклатура.Наименование КАК Наименование,
                |	Номенклатура.Код КАК Код
                |ИЗ
                |	Справочник.Номенклатура КАК Номенклатура
                |ГДЕ
                |	Номенклатура.Ссылка = &Ссылка
                |ИТОГИ ПО
                |	Номенклатура.Ссылка ТОЛЬКО ИЕРАРХИЯ";
			
			Запрос2.УстановитьПараметр("Ссылка", Выборка.Номенклатура);
			ВыборкаИерархии = Запрос2.Выполнить().Выбрать();
			Счетчик=1;
			Пока ВыборкаИерархии.Следующий() Цикл
				Если Выборка.Номенклатура.код<>ВыборкаИерархии.Код Тогда
				    
					СтруктураДанных.Вставить("sales_item_category"+Счетчик, ?(ЗначениеЗаполнено(ВыборкаИерархии.Наименование), Строка(ВыборкаИерархии.Наименование),"Без указания аналитики"));
					КонецЕсли;
			Счетчик=Счетчик+1;

		КонецЦикла;	
	КонецЕсли;	
		
		СтруктураДанных.Вставить("quantity_confirmed",Строка(Формат(Выборка.КОформлению,"ЧДЦ=2; ЧРД=,; ЧРГ=.; ЧГ=3,0")));		
		СтруктураДанных.Вставить("total", Строка(Формат(Выборка.Сумма,"ЧДЦ=2; ЧРД=,; ЧРГ=.; ЧГ=3,0")));  	
		СтруктураДанных.Вставить("cancelation_reason", Строка(Выборка.ПричинаОтмены)); 
		МассивДанных.Добавить(СтруктураДанных);			
	КонецЦикла; 
	
	ЗаписьJSON = Новый ЗаписьJSON;

	ЗаписьJSON.УстановитьСтроку();  
	ЗаписатьJSON(ЗаписьJSON, МассивДанных);
	
	СтрокаДляОтвета = ЗаписьJSON.Закрыть();  
	
	Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета, "UTF-8", ИспользованиеByteOrderMark.НеИспользовать);
	
	Возврат Ответ;

КонецФункции
Функция pingping(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.УстановитьТелоИзСтроки("Данные для дашборда доступны");
	Возврат Ответ;
КонецФункции

Функция expenses_dailyGET(Запрос)
	Ответ = Новый HTTPСервисОтвет(200); 
	ДатаЗапроса = СтроковыеФункцииКлиентСервер.СтрокаВДату(СтрЗаменить(Запрос.ПараметрыURL["data"],"-","."));
	ЛатаСтрокой=Запрос.ПараметрыURL["data"];
	Если ДатаЗапроса = Неопределено Тогда
		Ответ = Новый HTTPСервисОтвет(400);
		Ответ.УстановитьТелоИзСтроки("Не задан параметр Дата");
		Ответ.Заголовки.Вставить("Content-type", "application/json");
		Возврат Ответ;	
	КонецЕсли;
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
	             |	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт,
	             |	ХозрасчетныйОборотыДтКт.Период КАК Период,
	             |	-ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаОборот,
	             |	ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК СубконтоКт1
	             |ИЗ
	             |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, День, , , СчетКт В ИЕРАРХИИ (&Счет7), , ) КАК ХозрасчетныйОборотыДтКт
	             |
	             |ОБЪЕДИНИТЬ ВСЕ
	             |
	             |ВЫБРАТЬ
	             |	ХозрасчетныйОборотыДтКт.СчетДт,
	             |	ХозрасчетныйОборотыДтКт.СчетКт,
	             |	ХозрасчетныйОборотыДтКт.Период,
	             |	ХозрасчетныйОборотыДтКт.СуммаОборот,
	             |	ХозрасчетныйОборотыДтКт.СубконтоДт1
	             |ИЗ
	             |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, День, СчетДт В ИЕРАРХИИ (&Счет7), , , , ) КАК ХозрасчетныйОборотыДтКт";
	 Запрос.УстановитьПараметр("НачалоПериода",НачалоДня(ДатаЗапроса));
	Запрос.УстановитьПараметр("КонецПериода",КонецДня(ДатаЗапроса));
	Запрос.УстановитьПараметр("Счет7",ПланыСчетов.Хозрасчетный.Расходы);
	
	Выборка=Запрос.Выполнить().Выбрать();
	
	
	МассивДанных = Новый Массив;
	
	
	Пока Выборка.Следующий() Цикл	
		СтруктураДанных = Новый Структура;
		Если ЗначениеЗаполнено(Выборка.СубконтоКт1) Тогда
			Запрос2 = Новый Запрос;
			Запрос2.Текст = "ВЫБРАТЬ
			|	СтатьиРасходов.Наименование КАК Наименование,
			|   СтатьиРасходов.Код КАК Код
			|ИЗ
			|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
			|ГДЕ
			|	 СтатьиРасходов.Ссылка = &Ссылка
			|ИТОГИ ПО
			|	Ссылка ТОЛЬКО ИЕРАРХИЯ";
			
			Запрос2.УстановитьПараметр("Ссылка", Выборка.СубконтоКт1);
			ВыборкаИерархии = Запрос2.Выполнить().Выбрать();
			Счетчик=1;
			Пока ВыборкаИерархии.Следующий() Цикл
				Если Выборка.СубконтоКт1.код<>ВыборкаИерархии.Код Тогда
				    
					СтруктураДанных.Вставить("expense_type_level"+Счетчик, ?(ЗначениеЗаполнено(ВыборкаИерархии.Наименование), Строка(ВыборкаИерархии.Наименование),"Без указания аналитики"));
					КонецЕсли;
			Счетчик=Счетчик+1;

			КонецЦикла;	
			СтруктураДанных.Вставить("expenses_type", Строка(Выборка.СубконтоКт1.Код));
			СтруктураДанных.Вставить("expenses_name", Строка(Выборка.СубконтоКт1.Наименование));
		иначе
			СтруктураДанных.Вставить("expenses_type", "Без указания аналитики");
			СтруктураДанных.Вставить("expenses_name", "Без указания аналитики");

		КонецЕсли;
		СтруктураДанных.Вставить("expenses_type_monthly_total", Строка(Формат(Выборка.СуммаОборот,"ЧДЦ=2; ЧРД=,; ЧРГ=.; ЧГ=3,0")));  	
		СтруктураДанных.Вставить("date", Строка(Формат(Выборка.Период,"ДФ=yyyy-MM-dd")));
		МассивДанных.Добавить(СтруктураДанных);			
	КонецЦикла; 
	
	ЗаписьJSON = Новый ЗаписьJSON;
	
	ЗаписьJSON.УстановитьСтроку();  
	ЗаписатьJSON(ЗаписьJSON, МассивДанных);
	
	СтрокаДляОтвета = ЗаписьJSON.Закрыть();  
	
	Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета, "UTF-8", ИспользованиеByteOrderMark.Использовать);
	
	Возврат Ответ;

КонецФункции

Функция income_dailyGet(Запрос)
	Ответ = Новый HTTPСервисОтвет(200); 
	ДатаЗапроса = СтроковыеФункцииКлиентСервер.СтрокаВДату(СтрЗаменить(Запрос.ПараметрыURL["data"],"-","."));
	ЛатаСтрокой=Запрос.ПараметрыURL["data"];
	Если ДатаЗапроса = Неопределено Тогда
		Ответ = Новый HTTPСервисОтвет(400);
		Ответ.УстановитьТелоИзСтроки("Не задан параметр Дата");
		Ответ.Заголовки.Вставить("Content-type", "application/json");
		Возврат Ответ;	
	КонецЕсли;
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
	|	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт,
	|	ХозрасчетныйОборотыДтКт.Период КАК Период,
	|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаОборот,
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК СубконтоКт1
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, День, , , СчетКт В ИЕРАРХИИ (&Счет6), , ) КАК ХозрасчетныйОборотыДтКт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СчетДт,
	|	ХозрасчетныйОборотыДтКт.СчетКт,
	|	ХозрасчетныйОборотыДтКт.Период,
	|	-ХозрасчетныйОборотыДтКт.СуммаОборот,
	|	ХозрасчетныйОборотыДтКт.СубконтоДт1
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, День, СчетДт В ИЕРАРХИИ (&Счет6), , , , ) КАК ХозрасчетныйОборотыДтКт";
	Запрос.УстановитьПараметр("НачалоПериода",НачалоДня(ДатаЗапроса));
	Запрос.УстановитьПараметр("КонецПериода",КонецДня(ДатаЗапроса));
	Запрос.УстановитьПараметр("Счет6",ПланыСчетов.Хозрасчетный.Доходы);
	
	Выборка=Запрос.Выполнить().Выбрать();
	
	
	МассивДанных = Новый Массив;
	
	
	Пока Выборка.Следующий() Цикл	
		СтруктураДанных = Новый Структура;
		Если ЗначениеЗаполнено(Выборка.СубконтоКт1) Тогда
			СтруктураДанных.Вставить("income_type", Строка(Выборка.СубконтоКт1.Код));
			СтруктураДанных.Вставить("income_name", Строка(Выборка.СубконтоКт1.Наименование));
		иначе
			СтруктураДанных.Вставить("income_type", "Без указания аналитики");
			СтруктураДанных.Вставить("income_name", "Без указания аналитики");

		КонецЕсли;
		СтруктураДанных.Вставить("income_type_monthly_total", Строка(Формат(Выборка.СуммаОборот,"ЧДЦ=2; ЧРД=,; ЧРГ=.; ЧГ=3,0")));  	
		СтруктураДанных.Вставить("date", Строка(Формат(Выборка.Период,"ДФ=yyyy-MM-dd")));
		МассивДанных.Добавить(СтруктураДанных);			
	КонецЦикла; 
	
	ЗаписьJSON = Новый ЗаписьJSON;
	
	ЗаписьJSON.УстановитьСтроку();  
	ЗаписатьJSON(ЗаписьJSON, МассивДанных);
	
	СтрокаДляОтвета = ЗаписьJSON.Закрыть();  
	
	Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета, "UTF-8", ИспользованиеByteOrderMark.Использовать);
	
	Возврат Ответ;

КонецФункции

Функция expenses_monthlyget(Запрос)
	Ответ = Новый HTTPСервисОтвет(200); 
	ДатаЗапроса = СтроковыеФункцииКлиентСервер.СтрокаВДату(СтрЗаменить(Запрос.ПараметрыURL["data"],"-","."));
	ЛатаСтрокой=Запрос.ПараметрыURL["data"];
	Если ДатаЗапроса = Неопределено Тогда
		Ответ = Новый HTTPСервисОтвет(400);
		Ответ.УстановитьТелоИзСтроки("Не задан параметр Дата");
		Ответ.Заголовки.Вставить("Content-type", "application/json");
		Возврат Ответ;	
	КонецЕсли;
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
	             |	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт,
	             |	ХозрасчетныйОборотыДтКт.Период КАК Период,
	             |	-ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаОборот,
	             |	ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК СубконтоКт1
	             |ИЗ
	             |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, Месяц, , , СчетКт В ИЕРАРХИИ (&Счет7), , ) КАК ХозрасчетныйОборотыДтКт
	             |
	             |ОБЪЕДИНИТЬ ВСЕ
	             |
	             |ВЫБРАТЬ
	             |	ХозрасчетныйОборотыДтКт.СчетДт,
	             |	ХозрасчетныйОборотыДтКт.СчетКт,
	             |	ХозрасчетныйОборотыДтКт.Период,
	             |	ХозрасчетныйОборотыДтКт.СуммаОборот,
	             |	ХозрасчетныйОборотыДтКт.СубконтоДт1
	             |ИЗ
	             |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, Месяц, СчетДт В ИЕРАРХИИ (&Счет7), , , , ) КАК ХозрасчетныйОборотыДтКт";
	 Запрос.УстановитьПараметр("НачалоПериода",НачалоМесяца(ДатаЗапроса));
	Запрос.УстановитьПараметр("КонецПериода",КонецМесяца(ДатаЗапроса));
	Запрос.УстановитьПараметр("Счет7",ПланыСчетов.Хозрасчетный.Расходы);
	
	Выборка=Запрос.Выполнить().Выбрать();
	
	
	МассивДанных = Новый Массив;
			
	Пока Выборка.Следующий() Цикл	
		СтруктураДанных = Новый Структура;
		Если ЗначениеЗаполнено(Выборка.СубконтоКт1) Тогда
			Запрос2 = Новый Запрос;
			Запрос2.Текст = "ВЫБРАТЬ
			|	СтатьиРасходов.Наименование КАК Наименование,
			|   СтатьиРасходов.Код КАК Код
			|ИЗ
			|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
			|ГДЕ
			|	 СтатьиРасходов.Ссылка = &Ссылка
			|ИТОГИ ПО
			|	Ссылка ТОЛЬКО ИЕРАРХИЯ";
			
			Запрос2.УстановитьПараметр("Ссылка", Выборка.СубконтоКт1);
			ВыборкаИерархии = Запрос2.Выполнить().Выбрать();
			Счетчик=1;
			Пока ВыборкаИерархии.Следующий() Цикл
				Если Выборка.СубконтоКт1.код<>ВыборкаИерархии.Код Тогда
				    
					СтруктураДанных.Вставить("expense_type_level"+Счетчик, ?(ЗначениеЗаполнено(ВыборкаИерархии.Наименование), Строка(ВыборкаИерархии.Наименование),"Без указания аналитики"));
					КонецЕсли;
			Счетчик=Счетчик+1;

			КонецЦикла;			
						
			СтруктураДанных.Вставить("expenses_type", Строка(Выборка.СубконтоКт1.Код));
			СтруктураДанных.Вставить("expenses_name", Строка(Выборка.СубконтоКт1.Наименование));
		иначе
			СтруктураДанных.Вставить("expenses_type", "Без указания аналитики");
			СтруктураДанных.Вставить("expenses_name", "Без указания аналитики");

		КонецЕсли;
		СтруктураДанных.Вставить("expenses_type_monthly_total", Строка(Формат(Выборка.СуммаОборот,"ЧДЦ=2; ЧРД=,; ЧРГ=.; ЧГ=3,0")));  	
		СтруктураДанных.Вставить("period", Строка(Формат(Выборка.Период,"ДФ=yyyy-MM")));
		МассивДанных.Добавить(СтруктураДанных);			
	КонецЦикла; 
	
	ЗаписьJSON = Новый ЗаписьJSON;
	
	ЗаписьJSON.УстановитьСтроку();  
	ЗаписатьJSON(ЗаписьJSON, МассивДанных);
	
	СтрокаДляОтвета = ЗаписьJSON.Закрыть();  
	
	Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета, "UTF-8", ИспользованиеByteOrderMark.Использовать);
	
	Возврат Ответ;

КонецФункции




Функция income_monthlyget(Запрос)
	Ответ = Новый HTTPСервисОтвет(200); 
	ДатаЗапроса = СтроковыеФункцииКлиентСервер.СтрокаВДату(СтрЗаменить(Запрос.ПараметрыURL["data"],"-","."));
	ЛатаСтрокой=Запрос.ПараметрыURL["data"];
	Если ДатаЗапроса = Неопределено Тогда
		Ответ = Новый HTTPСервисОтвет(400);
		Ответ.УстановитьТелоИзСтроки("Не задан параметр Дата");
		Ответ.Заголовки.Вставить("Content-type", "application/json");
		Возврат Ответ;	
	КонецЕсли;
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
	|	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт,
	|	ХозрасчетныйОборотыДтКт.Период КАК Период,
	|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаОборот,
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК СубконтоКт1
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, Месяц, , , СчетКт В ИЕРАРХИИ (&Счет6), , ) КАК ХозрасчетныйОборотыДтКт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СчетДт,
	|	ХозрасчетныйОборотыДтКт.СчетКт,
	|	ХозрасчетныйОборотыДтКт.Период,
	|	-ХозрасчетныйОборотыДтКт.СуммаОборот,
	|	ХозрасчетныйОборотыДтКт.СубконтоДт1
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, Месяц, СчетДт В ИЕРАРХИИ (&Счет6), , , , ) КАК ХозрасчетныйОборотыДтКт";
	Запрос.УстановитьПараметр("НачалоПериода",НачалоМесяца(ДатаЗапроса));
	Запрос.УстановитьПараметр("КонецПериода",КонецМесяца(ДатаЗапроса));
	Запрос.УстановитьПараметр("Счет6",ПланыСчетов.Хозрасчетный.Доходы);
	
	Выборка=Запрос.Выполнить().Выбрать();
	
	
	МассивДанных = Новый Массив;
	
	
	Пока Выборка.Следующий() Цикл	
		СтруктураДанных = Новый Структура;
		Если ЗначениеЗаполнено(Выборка.СубконтоКт1) Тогда
			СтруктураДанных.Вставить("income_type", Выборка.СубконтоКт1.Код);
			СтруктураДанных.Вставить("income_name", Выборка.СубконтоКт1.Наименование);
		иначе
			СтруктураДанных.Вставить("income_type", "Без указания аналитики");
			СтруктураДанных.Вставить("income_name", "Без указания аналитики");
		КонецЕсли;
		СтруктураДанных.Вставить("income_type_monthly_total", Строка(Формат(Выборка.СуммаОборот,"ЧДЦ=2; ЧРД=,; ЧРГ=.; ЧГ=3,0")));  	
		СтруктураДанных.Вставить("period", Строка(Формат(Выборка.Период,"ДФ=yyyy-MM")));  	

		МассивДанных.Добавить(СтруктураДанных);			
	КонецЦикла; 
	
	ЗаписьJSON = Новый ЗаписьJSON;
	
	ЗаписьJSON.УстановитьСтроку();  
	ЗаписатьJSON(ЗаписьJSON, МассивДанных);
	
	СтрокаДляОтвета = ЗаписьJSON.Закрыть();  
	
	Ответ.УстановитьТелоИзСтроки(СтрокаДляОтвета, "UTF-8", ИспользованиеByteOrderMark.Использовать);
	
	Возврат Ответ;

КонецФункции
